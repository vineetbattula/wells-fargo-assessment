{"ast":null,"code":"import { catchError } from 'rxjs/operators';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class WeatherService {\n  constructor(http) {\n    this.http = http;\n    this.apiUrl = 'http://localhost:8080/weather';\n  }\n  getWeather(cityName) {\n    const url = `${this.apiUrl}/${cityName}`;\n    return this.http.get(url).pipe(catchError(error => {\n      console.log(error);\n      console.log(error.status);\n      if (error.status === 404) {\n        throw new Error('City not found');\n      } else {\n        throw new Error('Error fetching weather data. Please try again later.');\n      }\n    }));\n  }\n}\nWeatherService.ɵfac = function WeatherService_Factory(t) {\n  return new (t || WeatherService)(i0.ɵɵinject(i1.HttpClient));\n};\nWeatherService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: WeatherService,\n  factory: WeatherService.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"names":["catchError","WeatherService","constructor","http","apiUrl","getWeather","cityName","url","get","pipe","error","console","log","status","Error","i0","ɵɵinject","i1","HttpClient","factory","ɵfac","providedIn"],"sources":["/Users/vineetbattula/WellsFargoAssessment/WeatherApp/src/app/services/weather.service.ts"],"sourcesContent":["// import { HttpClient } from '@angular/common/http';\n// import { Injectable } from '@angular/core';\n// import { Observable } from 'rxjs';\n// import { catchError } from 'rxjs/operators';\n\n// @Injectable({\n//   providedIn: 'root'\n// })\n// export class WeatherService {\n//   private apiUrl = 'http://localhost:8080/weather';\n\n//   constructor(private http: HttpClient) {}\n\n//   getWeather(cityName: string): Observable<any> {\n//     const url = `${this.apiUrl}/${cityName}`;\n//     return this.http.get(url).pipe(\n//       catchError((error) => {\n//         console.log(error);\n//         throw new Error('Error fetching weather data. Please try again later.');\n//       })\n//     );\n//   }\n// }\n\n\nimport { HttpClient, HttpErrorResponse } from '@angular/common/http';\n\nimport { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { catchError } from 'rxjs/operators';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class WeatherService {\n  private apiUrl = 'http://localhost:8080/weather';\n\n  constructor(private http: HttpClient) {}\n\n  getWeather(cityName: string): Observable<any> {\n    const url = `${this.apiUrl}/${cityName}`;\n    return this.http.get(url).pipe(\n      catchError((error: HttpErrorResponse) => {\n        console.log(error);\n        console.log(error.status);\n        if (error.status === 404) {\n          throw new Error('City not found');\n        } else {\n          throw new Error('Error fetching weather data. Please try again later.');\n        }\n      })\n    );\n  }\n}\n\n\n\n"],"mappings":"AA6BA,SAASA,UAAU,QAAQ,gBAAgB;;;AAK3C,OAAM,MAAOC,cAAc;EAGzBC,YAAoBC,IAAgB;IAAhB,KAAAA,IAAI,GAAJA,IAAI;IAFhB,KAAAC,MAAM,GAAG,+BAA+B;EAET;EAEvCC,UAAUA,CAACC,QAAgB;IACzB,MAAMC,GAAG,GAAG,GAAG,IAAI,CAACH,MAAM,IAAIE,QAAQ,EAAE;IACxC,OAAO,IAAI,CAACH,IAAI,CAACK,GAAG,CAACD,GAAG,CAAC,CAACE,IAAI,CAC5BT,UAAU,CAAEU,KAAwB,IAAI;MACtCC,OAAO,CAACC,GAAG,CAACF,KAAK,CAAC;MAClBC,OAAO,CAACC,GAAG,CAACF,KAAK,CAACG,MAAM,CAAC;MACzB,IAAIH,KAAK,CAACG,MAAM,KAAK,GAAG,EAAE;QACxB,MAAM,IAAIC,KAAK,CAAC,gBAAgB,CAAC;OAClC,MAAM;QACL,MAAM,IAAIA,KAAK,CAAC,sDAAsD,CAAC;;IAE3E,CAAC,CAAC,CACH;EACH;;AAlBWb,cAAc,C;mBAAdA,cAAc,EAAAc,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,UAAA;AAAA;AAAdjB,cAAc,C;SAAdA,cAAc;EAAAkB,OAAA,EAAdlB,cAAc,CAAAmB,IAAA;EAAAC,UAAA,EAFb;AAAM"},"metadata":{},"sourceType":"module","externalDependencies":[]}