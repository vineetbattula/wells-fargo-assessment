{"ast":null,"code":"// old code \n// import { HttpClient } from '@angular/common/http';\n// import { Component } from '@angular/core';\n// import { WeatherService } from '../services/weather.service';\n// @Component({\n//   selector: 'app-weather',\n//   templateUrl: './weather.component.html',\n//   styleUrls: ['./weather.component.css']\n// })\n// export class WeatherComponent {\n//   weather: any;\n//   city: string = '';\n//   //constructor(private weatherService : WeatherService){ } \n//   constructor(private http: HttpClient){}\n//   private apiUrl = 'http://localhost:8080/weather';\n//   // call the service from getWeather and make the service call the api\n//   getWeather(city : string) : void {\n//     console.log(\"get weather\");\n//     console.log(city);\n//     const url = `${this.apiUrl}/${city}`;\n//     console.log(url);\n//     let response = this.http.get(url);\n//     console.log(response);\n//     response.subscribe(\n//       (data) => { \n//       this.weather=data;\n//       console.log(this.weather);\n//       console.log(\"max temp \", this.weather.main.temp_max);\n//       console.log(\"max temp \", this.weather.main.temp_min);\n//     },\n//     (error) => {\n//       console.log(error);\n//     }\n//     );\n//     console.log(\"abcd\");\n//   }\n//   onSubmit() : void {\n//     this.getWeather(this.city);\n//   }\n// }\n// new code  but not so good ui\n// import { Component } from '@angular/core';\n// interface CityWeather {\n//   city: string;\n//   temperature: number;\n// }\n// @Component({\n//   selector: 'app-weather',\n//   templateUrl: './weather.component.html',\n//   styleUrls: ['./weather.component.css']\n// })\n// export class WeatherComponent {\n//   cityWeatherList: CityWeather[] = [];\n//   newCity: string = '';\n//   addCity(): void {\n//     if (this.newCity.trim() !== '') {\n//       // Make API call and fetch temperature for the new city\n//       const temperature = this.getTemperature(this.newCity);\n//       // Create a new CityWeather object and add it to the cityWeatherList\n//       const cityWeather: CityWeather = {\n//         city: this.newCity,\n//         temperature: temperature\n//       };\n//       this.cityWeatherList.push(cityWeather);\n//       // Clear the input field\n//       this.newCity = '';\n//     }\n//   }\n//   getTemperature(city: string): number {\n//     // Perform API call to fetch temperature for the city\n//     // Replace this with your actual API call logic\n//     // For demo purposes, return a random temperature\n//     return Math.floor(Math.random() * (30 - 10 + 1)) + 10;\n//   }\n// }\n// trying out card ts for card html\nexport class WeatherComponent {\n  constructor() {\n    this.cities = [{\n      name: 'City 1',\n      temperature: 20,\n      humidity: 60,\n      expanded: false\n    }, {\n      name: 'City 2',\n      temperature: 25,\n      humidity: 70,\n      expanded: false\n    }\n    // Add more cities as needed\n    ];\n    // Other component logic...\n  }\n}","map":{"version":3,"names":["WeatherComponent","constructor","cities","name","temperature","humidity","expanded"],"sources":["/Users/vineetbattula/WellsFargoAssessment/WeatherApp/src/app/weather/weather.component.ts"],"sourcesContent":["// old code \n\n\n// import { HttpClient } from '@angular/common/http';\n// import { Component } from '@angular/core';\n// import { WeatherService } from '../services/weather.service';\n\n// @Component({\n//   selector: 'app-weather',\n//   templateUrl: './weather.component.html',\n//   styleUrls: ['./weather.component.css']\n// })\n// export class WeatherComponent {\n\n//   weather: any;\n//   city: string = '';\n//   //constructor(private weatherService : WeatherService){ } \n//   constructor(private http: HttpClient){}\n  \n//   private apiUrl = 'http://localhost:8080/weather';\n//   // call the service from getWeather and make the service call the api\n//   getWeather(city : string) : void {\n//     console.log(\"get weather\");\n//     console.log(city);\n//     const url = `${this.apiUrl}/${city}`;\n//     console.log(url);\n//     let response = this.http.get(url);\n//     console.log(response);\n//     response.subscribe(\n//       (data) => { \n//       this.weather=data;\n//       console.log(this.weather);\n//       console.log(\"max temp \", this.weather.main.temp_max);\n//       console.log(\"max temp \", this.weather.main.temp_min);\n//     },\n//     (error) => {\n//       console.log(error);\n//     }\n//     );\n//     console.log(\"abcd\");\n//   }\n\n//   onSubmit() : void {\n//     this.getWeather(this.city);\n//   }\n// }\n\n// new code  but not so good ui\n\n// import { Component } from '@angular/core';\n\n// interface CityWeather {\n//   city: string;\n//   temperature: number;\n// }\n\n// @Component({\n//   selector: 'app-weather',\n//   templateUrl: './weather.component.html',\n//   styleUrls: ['./weather.component.css']\n// })\n// export class WeatherComponent {\n//   cityWeatherList: CityWeather[] = [];\n//   newCity: string = '';\n\n//   addCity(): void {\n//     if (this.newCity.trim() !== '') {\n//       // Make API call and fetch temperature for the new city\n//       const temperature = this.getTemperature(this.newCity);\n\n//       // Create a new CityWeather object and add it to the cityWeatherList\n//       const cityWeather: CityWeather = {\n//         city: this.newCity,\n//         temperature: temperature\n//       };\n//       this.cityWeatherList.push(cityWeather);\n\n//       // Clear the input field\n//       this.newCity = '';\n//     }\n//   }\n\n//   getTemperature(city: string): number {\n//     // Perform API call to fetch temperature for the city\n//     // Replace this with your actual API call logic\n//     // For demo purposes, return a random temperature\n//     return Math.floor(Math.random() * (30 - 10 + 1)) + 10;\n//   }\n// }\n\n\n// trying out card ts for card html\n\nexport class WeatherComponent {\n  cities: any[] = [\n    { name: 'City 1', temperature: 20, humidity: 60, expanded: false },\n    { name: 'City 2', temperature: 25, humidity: 70, expanded: false },\n    // Add more cities as needed\n  ];\n\n  // Other component logic...\n}\n\n\n"],"mappings":"AAAA;AAGA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AAEA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AAEA,OAAM,MAAOA,gBAAgB;EAA7BC,YAAA;IACE,KAAAC,MAAM,GAAU,CACd;MAAEC,IAAI,EAAE,QAAQ;MAAEC,WAAW,EAAE,EAAE;MAAEC,QAAQ,EAAE,EAAE;MAAEC,QAAQ,EAAE;IAAK,CAAE,EAClE;MAAEH,IAAI,EAAE,QAAQ;MAAEC,WAAW,EAAE,EAAE;MAAEC,QAAQ,EAAE,EAAE;MAAEC,QAAQ,EAAE;IAAK;IAChE;IAAA,CACD;IAED;EACF"},"metadata":{},"sourceType":"module","externalDependencies":[]}