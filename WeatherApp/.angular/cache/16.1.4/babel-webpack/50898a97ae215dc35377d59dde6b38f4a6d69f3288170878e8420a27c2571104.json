{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nimport * as i2 from \"@angular/common\";\nimport * as i3 from \"@angular/forms\";\nfunction WeatherComponent_div_11_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 8)(1, \"h3\");\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"div\", 9)(4, \"div\", 10);\n    i0.ɵɵtext(5);\n    i0.ɵɵpipe(6, \"number\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(7, \"div\", 11);\n    i0.ɵɵtext(8);\n    i0.ɵɵelementEnd()()();\n  }\n  if (rf & 2) {\n    const cityWeather_r2 = ctx.$implicit;\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(cityWeather_r2.city);\n    i0.ɵɵadvance(3);\n    i0.ɵɵtextInterpolate1(\"\", i0.ɵɵpipeBind2(6, 3, cityWeather_r2.weather.main.temp, \"1.0-0\"), \"\\u00B0C\");\n    i0.ɵɵadvance(3);\n    i0.ɵɵtextInterpolate(cityWeather_r2.weather.weather[0].description);\n  }\n}\nexport class WeatherComponent {\n  //constructor(private weatherService : WeatherService){ } \n  constructor(http) {\n    this.http = http;\n    this.city = '';\n    this.apiUrl = 'http://localhost:8080/weather';\n  }\n  // call the service from getWeather and make the service call the api\n  getWeather(city) {\n    console.log(\"get weather\");\n    console.log(city);\n    const url = `${this.apiUrl}/${city}`;\n    console.log(url);\n    let response = this.http.get(url);\n    console.log(response);\n    response.subscribe(data => {\n      this.weather = data;\n      console.log(this.weather);\n      console.log(\"max temp \", this.weather.main.temp_max);\n      console.log(\"max temp \", this.weather.main.temp_min);\n    }, error => {\n      console.log(error);\n    });\n    console.log(\"abcd\");\n  }\n  onSubmit() {\n    this.getWeather(this.city);\n  }\n}\nWeatherComponent.ɵfac = function WeatherComponent_Factory(t) {\n  return new (t || WeatherComponent)(i0.ɵɵdirectiveInject(i1.HttpClient));\n};\nWeatherComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: WeatherComponent,\n  selectors: [[\"app-weather\"]],\n  decls: 12,\n  vars: 2,\n  consts: [[1, \"container\"], [1, \"input-section\"], [3, \"ngSubmit\"], [\"weatherForm\", \"ngForm\"], [\"type\", \"text\", \"name\", \"city\", \"placeholder\", \"Enter city name\", 3, \"ngModel\", \"ngModelChange\"], [\"type\", \"submit\"], [1, \"weather-section\"], [\"class\", \"city-weather\", 4, \"ngFor\", \"ngForOf\"], [1, \"city-weather\"], [1, \"weather-data\"], [1, \"temperature\"], [1, \"description\"]],\n  template: function WeatherComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵtext(0, \" new code with multiple cities \");\n      i0.ɵɵelementStart(1, \"div\", 0)(2, \"div\", 1)(3, \"h2\");\n      i0.ɵɵtext(4, \"Enter City Names\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(5, \"form\", 2, 3);\n      i0.ɵɵlistener(\"ngSubmit\", function WeatherComponent_Template_form_ngSubmit_5_listener() {\n        return ctx.onSubmit();\n      });\n      i0.ɵɵelementStart(7, \"input\", 4);\n      i0.ɵɵlistener(\"ngModelChange\", function WeatherComponent_Template_input_ngModelChange_7_listener($event) {\n        return ctx.city = $event;\n      });\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(8, \"button\", 5);\n      i0.ɵɵtext(9, \"Get Weather\");\n      i0.ɵɵelementEnd()()();\n      i0.ɵɵelementStart(10, \"div\", 6);\n      i0.ɵɵtemplate(11, WeatherComponent_div_11_Template, 9, 6, \"div\", 7);\n      i0.ɵɵelementEnd()();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(7);\n      i0.ɵɵproperty(\"ngModel\", ctx.city);\n      i0.ɵɵadvance(4);\n      i0.ɵɵproperty(\"ngForOf\", ctx.cityWeatherList);\n    }\n  },\n  dependencies: [i2.NgForOf, i3.ɵNgNoValidate, i3.DefaultValueAccessor, i3.NgControlStatus, i3.NgControlStatusGroup, i3.NgModel, i3.NgForm, i2.DecimalPipe],\n  styles: [\"/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n});","map":{"version":3,"names":["i0","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵadvance","ɵɵtextInterpolate","cityWeather_r2","city","ɵɵtextInterpolate1","ɵɵpipeBind2","weather","main","temp","description","WeatherComponent","constructor","http","apiUrl","getWeather","console","log","url","response","get","subscribe","data","temp_max","temp_min","error","onSubmit","ɵɵdirectiveInject","i1","HttpClient","selectors","decls","vars","consts","template","WeatherComponent_Template","rf","ctx","ɵɵlistener","WeatherComponent_Template_form_ngSubmit_5_listener","WeatherComponent_Template_input_ngModelChange_7_listener","$event","ɵɵtemplate","WeatherComponent_div_11_Template","ɵɵproperty","cityWeatherList"],"sources":["/Users/vineetbattula/WellsFargoAssessment/WeatherApp/src/app/weather/weather.component.ts","/Users/vineetbattula/WellsFargoAssessment/WeatherApp/src/app/weather/weather.component.html"],"sourcesContent":["import { HttpClient } from '@angular/common/http';\nimport { Component } from '@angular/core';\nimport { WeatherService } from '../services/weather.service';\n\n@Component({\n  selector: 'app-weather',\n  templateUrl: './weather.component.html',\n  styleUrls: ['./weather.component.css']\n})\nexport class WeatherComponent {\n\n  weather: any;\n  city: string = '';\n  //constructor(private weatherService : WeatherService){ } \n  constructor(private http: HttpClient){}\n  \n  private apiUrl = 'http://localhost:8080/weather';\n  // call the service from getWeather and make the service call the api\n  getWeather(city : string) : void {\n    console.log(\"get weather\");\n    console.log(city);\n    const url = `${this.apiUrl}/${city}`;\n    console.log(url);\n    let response = this.http.get(url);\n    console.log(response);\n    response.subscribe(\n      (data) => { \n      this.weather=data;\n      console.log(this.weather);\n      console.log(\"max temp \", this.weather.main.temp_max);\n      console.log(\"max temp \", this.weather.main.temp_min);\n    },\n    (error) => {\n      console.log(error);\n    }\n    );\n    console.log(\"abcd\");\n  }\n\n  onSubmit() : void {\n    this.getWeather(this.city);\n  }\n}\n\n","<!-- old code  -->\n<!-- <div class=\"container\"> \n    <div class=\"upper-data\">\n        <img src=\"../../assets/sunny.webp\" *ngIf=\"2<1\"/>\n        <img src=\"../../assets/Cold.webp\" *ngIf=\"1<2\"/>\n\n        <div class=\"weather-data\">\n         <div class=\"location\">Wellington</div>\n         <div class=\"temperature\">{{ 14.40 | number: '1.0-0'}}°C</div>\n        </div>\n    </div>\n\n    <div class=\"lower-data\">\n        <div class=\"more-info-label\">\n            More Information\n        </div>\n        <div class=\"more-info-container\">\n            <div class=\"info-block\">\n                <div class=\"info-block-label\">\n                    <img src=\"../../assets/cold.png\" >\n                    <span>min</span>\n                </div>\n                <div class=\"info-block-value\">\n                    10°C\n                </div>\n            </div>\n            <div class=\"info-block\">\n                <div class=\"info-block-label\">\n                    <img src=\"../../assets/hot.png\" >\n                    <span>max</span>\n                </div>\n                <div class=\"info-block-value\">\n                    10°C\n                </div>\n            </div>\n            \n            <div class=\"info-block\">\n                <div class=\"info-block-label\">\n                    <img src=\"../../assets/cold-temp.jpeg\" >\n                    <span>humidity</span>\n                </div>\n                <div class=\"info-block-value\">\n                    10°C\n                </div>\n            </div>\n            <div class=\"info-block\">\n                <div class=\"info-block-label\">\n                    <img src=\"../../assets/cold-temp.jpeg\" >\n                    <span>wind</span>\n                </div>\n                <div class=\"info-block-value\">\n                    10°C\n                </div>\n            </div>\n        </div>\n\n    </div>\n</div> -->\n\nnew code with multiple cities\n\n<div class=\"container\">\n    <div class=\"input-section\">\n      <h2>Enter City Names</h2>\n      <form (ngSubmit)=\"onSubmit()\" #weatherForm=\"ngForm\">\n        <input type=\"text\" name=\"city\" [(ngModel)]=\"city\" placeholder=\"Enter city name\">\n        <button type=\"submit\">Get Weather</button>\n      </form>\n    </div>\n  \n    <div class=\"weather-section\">\n      <div *ngFor=\"let cityWeather of cityWeatherList\" class=\"city-weather\">\n        <h3>{{ cityWeather.city }}</h3>\n        <div class=\"weather-data\">\n          <div class=\"temperature\">{{ cityWeather.weather.main.temp | number: '1.0-0' }}°C</div>\n          <div class=\"description\">{{ cityWeather.weather.weather[0].description }}</div>\n        </div>\n      </div>\n    </div>\n  </div>\n  "],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}